name: Working Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npm run icon:convert
        
    - name: Build Windows
      if: matrix.os == 'windows-latest'
      run: |
        npx electron-builder --win --publish=never
        echo "=== Windows build artifacts ==="
        ls -la dist/ || echo "No dist directory"
        find dist -name "*.exe" || echo "No exe files found"
        
    - name: Build macOS
      if: matrix.os == 'macos-latest'
      run: |
        npx electron-builder --mac --publish=never
        echo "=== macOS build artifacts ==="
        ls -la dist/ || echo "No dist directory"
        find dist -name "*.dmg" || echo "No dmg files found"
        find dist -name "*.zip" || echo "No zip files found"
        
    - name: Build Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        npx electron-builder --linux --publish=never
        echo "=== Linux build artifacts ==="
        ls -la dist/ || echo "No dist directory"
        find dist -name "*.AppImage" || echo "No AppImage files found"
        
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/*.exe
        if-no-files-found: warn
        
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: |
          dist/*.dmg
          dist/*.zip
        if-no-files-found: warn
        
    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: dist/*.AppImage
        if-no-files-found: warn

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: dist/
        
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: macos-build
        path: dist/
        
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: linux-build
        path: dist/
        
    - name: List all artifacts
      run: |
        echo "=== All artifacts ==="
        find dist -type f -name "*" || echo "No files found"
        echo "=== Windows files ==="
        find dist -name "*.exe" || echo "No Windows files"
        echo "=== macOS files ==="
        find dist -name "*.dmg" || echo "No DMG files"
        find dist -name "*.zip" || echo "No ZIP files"
        echo "=== Linux files ==="
        find dist -name "*.AppImage" || echo "No AppImage files"
        
    - name: Get version from package.json
      id: version
      run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Suivi des DÃ©penses v${{ steps.version.outputs.VERSION }}
        files: |
          dist/*.exe
          dist/*.dmg
          dist/*.zip
          dist/*.AppImage
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
