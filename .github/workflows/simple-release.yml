name: Simple Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Generate icon
      run: npm run icon
      
    - name: Build application
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          npm run build:win
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          npm run build:mac
        else
          npm run build:linux
        fi
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false
        ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
        
    - name: List build artifacts
      run: |
        echo "=== Build artifacts ==="
        ls -la dist/ || echo "No dist directory"
        if [ -d "dist" ]; then
          find dist -type f -name "*" | head -20
        fi
        
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/*.exe
        if-no-files-found: warn
        
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: |
          dist/*.dmg
          dist/*.zip
        if-no-files-found: warn
        
    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: dist/*.AppImage
        if-no-files-found: warn

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: dist/
        
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: macos-build
        path: dist/
        
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: linux-build
        path: dist/
        
    - name: Get version from package.json
      id: version
      run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: List all artifacts
      run: |
        echo "=== All artifacts ==="
        find dist -type f -name "*" || echo "No files found"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Suivi des DÃ©penses v${{ steps.version.outputs.VERSION }}
        files: |
          dist/*.exe
          dist/*.dmg
          dist/*.zip
          dist/*.AppImage
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
